// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_POSE_FLATBUFFER_H_
#define FLATBUFFERS_GENERATED_POSE_FLATBUFFER_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 25,
             "Non-compatible flatbuffers version included");

namespace flatbuffer {

struct Pose;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(8) Pose FLATBUFFERS_FINAL_CLASS {
 private:
  double v_[6];

 public:
  struct Traits;
  Pose()
      : v_() {
  }
  Pose(::flatbuffers::span<const double, 6> _v) {
    ::flatbuffers::CastToArray(v_).CopyFromSpan(_v);
  }
  const ::flatbuffers::Array<double, 6> *v() const {
    return &::flatbuffers::CastToArray(v_);
  }
};
FLATBUFFERS_STRUCT_END(Pose, 48);

struct Pose::Traits {
  using type = Pose;
};

}  // namespace flatbuffer

#endif  // FLATBUFFERS_GENERATED_POSE_FLATBUFFER_H_
